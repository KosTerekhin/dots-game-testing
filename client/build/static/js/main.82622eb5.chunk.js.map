{"version":3,"sources":["context/user/UserContext.js","context/game/GameContext.js","config.js","componenents/assets/spinner.gif","context/game/GameState.js","context/game/GameReducer.js","context/user/UserState.js","context/user/UserReducer.js","layout/leaderboard/LeaderBoard.js","layout/game/navButtons/CustomButton.js","layout/game/navButtons/Option.js","componenents/Spinner.js","layout/game/navButtons/NavButtons.js","layout/message/Message.js","layout/game/playArea/GameItem.js","layout/game/playArea/PlayArea.js","layout/game/GameBoard.js","App.js","index.js"],"names":["UserContext","createContext","gameContext","module","exports","global","config","proxy","GameState","props","useReducer","GameReducer","gameSettings","gameState","count","red","green","currentGame","gameElements","randomArray","error","state","dispatch","serverProxy","changeGame","params","type","payload","fetchGameSettings","a","Axios","get","res","data","Object","keys","Provider","value","playButton","gameEnded","setNameError","increaseCount","id","updateRandomElement","random","children","action","playArea","Array","Math","pow","field","map","color","element","index","UserState","UserReducer","currentUser","name","startTime","currentWinner","allPlayers","serverMsg","postWinner","winner","endTime","newWinner","date","Date","toLocaleString","newPlayer","time","post","setTimeout","allUsers","setUser","user","setStartTime","LeaderBoard","useContext","length","className","ListGroup","sort","b","player","Item","key","Card","bg","style","opacity","Body","text","CustomButton","ReturnButton","Button","variant","size","onClick","handleSubmit","Option","setting","delay","Spinner","src","SpinnerGif","alt","NavButtons","useState","gameParams","setParams","spinnerShow","useEffect","Form","Group","controlId","Label","Control","as","onChange","e","gameName","target","split","InputGroup","FormControl","aria-label","aria-describedby","placeholder","preventDefault","trim","Message","ReturnMSG","GameItem","itemStyle","flexBasis","height","PlayArea","arr","forEach","splice","indexOf","randomElement","Random","startGame","now","condition","GameBoard","GameContext","App","ReactDOM","render","document","getElementById"],"mappings":"iGAAA,WAEMA,EAAcC,0BAELD,O,gCCJf,WAEME,EAAcD,0BAELC,O,oBCJfC,cAAOC,QAAUC,EAAOC,OAAS,CAChCC,MAAO,uD,qCCDRJ,EAAOC,QAAU,IAA0B,qC,yICoH5BI,IA7GG,SAACC,GAClB,IAD4B,EAcAC,qBAAWC,IAblB,CACpBC,aAAc,KACdC,UAAW,UACXC,MAAO,CACNC,IAAK,EACLC,MAAO,GAERC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,MAAO,OAXoB,mBAcpBC,EAdoB,KAcbC,EAda,KAetBC,EAAclB,EAAOC,OAAOC,MAG5BiB,EAAa,SAACC,GACnBH,EAAS,CACRI,KAAM,WACNC,QAASF,KAyCLG,EAAiB,uCAAG,4BAAAC,EAAA,+EAENC,IAAMC,IAAN,UAAaR,EAAb,mBAFM,OAElBS,EAFkB,OAIxBV,EAAS,CACRI,KAAM,eACNC,QAASK,EAAIC,OAEdT,EAAWQ,EAAIC,KAAKC,OAAOC,KAAKH,EAAIC,MAAM,KARlB,gDAUxBX,EAAS,CACRI,KAAM,gBAXiB,yDAAH,qDAuBvB,OACC,kBAAC,IAAYU,SAAb,CACCC,MAAO,CACNzB,aAAcS,EAAMT,aACpBC,UAAWQ,EAAMR,UACjBI,YAAaI,EAAMJ,YACnBC,aAAcG,EAAMH,aACpBJ,MAAOO,EAAMP,MACbK,YAAaE,EAAMF,YACnBC,MAAOC,EAAMD,MACbQ,oBACAJ,aACAc,WAvEgB,WAClBhB,EAAS,CACRI,KAAM,gBAsELa,UAjEe,WACjBjB,EAAS,CACRI,KAAM,gBAgELc,aApBkB,WACpBlB,EAAS,CACRI,KAAM,kBAmBLe,cApDmB,SAACf,EAAMgB,GACnB,QAAThB,GACCJ,EAAS,CACRI,KAAM,aACNC,QAASe,IAEF,UAAThB,GACCJ,EAAS,CACRI,KAAM,eACNC,QAASe,KA4CTC,oBA7DyB,SAACC,GAC5BtB,EAAS,CACRI,KAAM,gBACNC,QAASiB,OA6DRnC,EAAMoC,a,qEC/GK,aAACxB,EAAOyB,GACtB,OAAQA,EAAOpB,MACd,IAAK,eACJ,OAAO,eACHL,EADJ,CAECT,aAAckC,EAAOnB,UAGvB,IAAK,WACJ,IAAMoB,EAAQ,YAAQC,MAAMC,KAAKC,IAAIJ,EAAOnB,QAAQwB,MAAO,KAC3D,OAAO,eACH9B,EADJ,CAECJ,YAAa6B,EAAOnB,QACpBT,aAAc6B,EAASK,KAAI,WAC1B,MAAO,CACNC,MAAO,SAKX,IAAK,aACJ,OAAO,eACHhC,EADJ,CAECR,UAAW,OACXO,MAAO,OAGT,IAAK,aACJ,OAAO,eACHC,EADJ,CAECP,MAAM,eACFO,EAAMP,MADL,CAEJC,IAAKM,EAAMP,MAAMC,IAAM,IAExBG,aAAcG,EAAMH,aAAakC,KAAI,SAACE,EAASC,GAE9C,OADAA,IAAUT,EAAOnB,UAAY2B,EAAQD,MAAQ,OACtCC,OAKV,IAAK,eACJ,OAAO,eACHjC,EADJ,CAECP,MAAM,eACFO,EAAMP,MADL,CAEJE,MAAOK,EAAMP,MAAME,MAAQ,IAE5BE,aAAcG,EAAMH,aAAakC,KAAI,SAACE,EAASC,GAE9C,OADAA,IAAUT,EAAOnB,UAAY2B,EAAQD,MAAQ,SACtCC,OAKV,IAAK,gBACJ,OAAO,eACHjC,EADJ,CAECF,YAAY,GAAD,mBAAOE,EAAMF,aAAb,CAA0B2B,EAAOnB,UAC5CT,aAAcG,EAAMH,aAAakC,KAAI,SAACE,EAASC,GAE9C,OADAA,IAAUT,EAAOnB,UAAY2B,EAAQD,MAAQ,QACtCC,OAIV,IAAK,aACJ,OAAO,eACHjC,EADJ,CAECR,UAAW,OACXC,MAAO,CACNC,IAAK,EACLC,MAAO,GAERG,YAAa,GACbD,aAAcG,EAAMH,aAAakC,KAAI,SAACE,GAErC,OADAA,EAAQD,MAAQ,GACTC,OAIV,IAAK,oBACJ,OAAO,eACHjC,EADJ,CAECH,aAAa,GAAD,mBACRG,EAAMH,cADE,CAEX,CACCmC,MAAO,QAKX,IAAK,cACJ,OAAO,eACHhC,EADJ,CAECD,MAAO,mCAGT,IAAK,eACJ,OAAO,eACHC,EADJ,CAECR,UAAW,QACXO,MAAO,mCAET,QACC,OAAOC,K,yICHKmC,IA/FG,SAAC/C,GAClB,IAD4B,EAWAC,qBAAW+C,IAVlB,CACpBC,YAAa,CACZC,KAAM,GACNC,UAAW,MAEZC,cAAe,GACfC,WAAY,GACZC,UAAW,OARgB,mBAWpB1C,EAXoB,KAWbC,EAXa,KAYtBC,EAAclB,EAAOC,OAAOC,MAE5ByD,EAAU,uCAAG,WAAOC,EAAQC,GAAf,iBAAArC,EAAA,6DAEdsC,EAAY,CACfC,MAAM,IAAIC,MAAOC,mBAGPL,OADI,WAAXA,EACgB5C,EAAMqC,YAAYC,KAElBM,EAGdM,EAAY,CACjBZ,KAAMQ,EAAUF,OAChBO,MAAON,EAAU7C,EAAMqC,YAAYE,WAAa,IAChDQ,KAAMD,EAAUC,MAGjB9C,EAAS,CACRI,KAAM,gBACNC,QAAS4C,IAnBQ,kBAuBXzC,IAAM2C,KAAN,UAAclD,EAAd,YAAqC4C,GAvB1B,OAyBjB7C,EAAS,CACRI,KAAM,mBAGPgD,YAAW,WACVpD,EAAS,CACRI,KAAM,oBAEL,KAjCc,wDAmCjBJ,EAAS,CACRI,KAAM,oBAGPgD,YAAW,WACVpD,EAAS,CACRI,KAAM,oBAEL,KA3Cc,+DAAH,wDA+DhB,OACC,kBAAC,IAAYU,SAAb,CACCC,MAAO,CACNqB,YAAarC,EAAMqC,YACnBiB,SAAUtD,EAAMsD,SAChBb,WAAYzC,EAAMyC,WAClBD,cAAexC,EAAMwC,cACrBE,UAAW1C,EAAM0C,UACjBa,QAtBa,SAACC,GAChBvD,EAAS,CACRI,KAAM,qBACNC,QAASkD,KAoBRb,aACAc,aAjBkB,SAACN,GACrBlD,EAAS,CACRI,KAAM,iBACNC,QAAS6C,OAiBR/D,EAAMoC,a,qEChGK,aAACxB,EAAOyB,GACtB,OAAQA,EAAOpB,MACd,IAAK,qBACJ,OAAO,eACHL,EADJ,CAECqC,YAAY,eACRrC,EAAMqC,YADC,CAEVC,KAAMb,EAAOnB,YAIhB,IAAK,iBACJ,OAAO,eACHN,EADJ,CAECqC,YAAY,eACRrC,EAAMqC,YADC,CAEVE,UAAWd,EAAOnB,YAGrB,IAAK,eACJ,OAAO,eACHN,EADJ,CAECqC,YAAY,eACRrC,EAAMqC,YADC,CAEVQ,QAASpB,EAAOnB,YAInB,IAAK,gBACJ,OAAO,eACHN,EADJ,CAECqC,YAAa,CACZC,KAAM,GACNS,KAAM,KACNR,UAAW,MAEZC,cAAef,EAAOnB,QAAQgC,KAC9BG,WAAW,GAAD,mBAAOzC,EAAMyC,YAAb,CAAyBhB,EAAOnB,YAG5C,IAAK,iBACJ,OAAO,eACHN,EADJ,CAEC0C,UAAW,2CAGb,IAAK,kBACJ,OAAO,eACH1C,EADJ,CAEC0C,UAAW,iCAIb,IAAK,gBACJ,OAAO,eACH1C,EADJ,CAEC0C,UAAW,OAGb,QACC,OAAO1C,K,0KCXK0D,EA3CK,WAAO,IAAD,EACSC,qBAAWhF,KAArC8D,EADiB,EACjBA,WAAYC,EADK,EACLA,UAEpB,OAAID,EAAWmB,OAAS,EAEtB,yBAAKC,UAAU,eACd,4CACA,+DAKD,yBAAKA,UAAU,eACd,4CACA,kBAACC,EAAA,EAAD,KACErB,EAECsB,MAAK,SAACvD,EAAGwD,GACT,OAAOxD,EAAE2C,KAAOa,EAAEb,QAGlBpB,KAAI,SAACkC,GACL,OACC,kBAACH,EAAA,EAAUI,KAAX,CAAgBC,IAAKF,EAAOlB,KAAOkB,EAAOd,MACzC,yBAAKU,UAAU,YACd,2BAAII,EAAO3B,MACX,6BACC,2BAAI2B,EAAOd,KAAX,OACA,2BAAIc,EAAOlB,aAOlB,kBAACqB,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO5B,EAAY,CAAE6B,QAAS,KAAQ,CAAEA,QAAS,MAChE,kBAACH,EAAA,EAAKI,KAAN,CAAWC,KAAK,SAAS/B,M,uBCXfgC,EA5BM,SAACtF,GACrB,IAAIuF,EAAe,KACnB,OAAQvF,EAAMiB,MACb,IAAK,UACJsE,EACC,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,KAAK,KAAKC,QAAS3F,EAAM4F,cAAhD,QAID,MACD,IAAK,OACJL,EACC,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKC,QAAS3F,EAAM4F,cAAnD,aAID,MAED,QACCL,EACC,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,KAAK,KAAKC,QAAS3F,EAAM4F,cAAhD,QAKH,OAAOL,GChBOM,EAVA,SAAC7F,GAAW,IAClB8F,EAA0B9F,EAA1B8F,QAASpD,EAAiB1C,EAAjB0C,MAAOqD,EAAU/F,EAAV+F,MAMxB,OAJC,4BAAQrD,MAAOA,EAAOqD,MAAOA,GAC3BD,EADF,KACapD,EADb,IACqBA,EADrB,uBACgDqD,EAAQ,IADxD,Y,iBCMaC,EARC,WACf,OACC,kBAAC,WAAD,KACC,yBAAKC,IAAKC,IAAYC,IAAI,UAAU1B,UAAU,c,gCC0GlC2B,EApGI,WAAO,IAAD,EACMC,mBAAS,CACtCC,WAAY,KACZpD,KAAM,KAHiB,mBAChBlC,EADgB,KACRuF,EADQ,KAMhBD,EAAqBtF,EAArBsF,WAAYpD,EAASlC,EAATkC,KANI,EAOqEqB,qBAC5F9E,KADOW,EAPgB,EAOhBA,UAAWD,EAPK,EAOLA,aAAcgB,EAPT,EAOSA,kBAAmBY,EAP5B,EAO4BA,aAAchB,EAP1C,EAO0CA,WAAYc,EAPtD,EAOsDA,WAGtEsC,EAAYI,qBAAWhF,KAAvB4E,QAGJqC,GAAc,EAClBC,qBACC,WACKD,GACHrF,IAGGmF,GACHvF,EAAWuF,KAIb,CAAEnG,EAAcqG,EAAaF,IAI9BnG,IAAiBqG,GAAc,GAiC/B,OAAIA,EAEF,yBAAK/B,UAAU,WACd,kBAAC,EAAD,OAKD,0BAAMA,UAAyB,SAAdrE,EAAuB,mBAAqB,WAC5D,kBAACsG,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BACrB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,GAAG,SAASrB,KAAK,KAAKxC,KAAK,aAAa8D,SAzCvC,SAACC,GACnB,IAAMC,EAAWD,EAAEE,OAAOvF,MAAMwF,MAAM,KAAK,GAC3Cb,EAAU,eACNvF,EADK,CAERsF,WAAYnG,EAAa+G,QAsCrBzF,OAAOC,KAAKvB,GAAcwC,KAAI,SAACmD,EAAShD,GAAV,OAC9B,kBAAC,EAAD,CACCiC,IAAKe,EAAUhD,EACfgD,QAASA,EACTpD,MAAOvC,EAAa2F,GAASpD,MAC7BqD,MAAO5F,EAAa2F,GAASC,aAKjC,kBAACsB,EAAA,EAAD,CAAY3B,KAAK,MAChB,kBAAC4B,EAAA,EAAD,CACCC,aAAW,QACXC,mBAAiB,uBACjBC,YAAY,kBACZvE,KAAK,OACLtB,MAAOsB,EACP8D,SAlDc,SAACC,GACnBV,EAAU,eACNvF,EADK,CAERkC,KAAM+D,EAAEE,OAAOvF,aAkDd,kBAAC,EAAD,CAAcX,KAAMb,EAAWwF,aA7Cb,SAACqB,GACrBA,EAAES,iBAEyB,KAAvB1G,EAAOkC,KAAKyE,OACf5F,KAEAF,IAEAsC,EAAQnD,EAAOkC,YClBH0E,EAhDC,SAAC5H,GAChB,IAAI6H,EAAY,KAChB,OAAQ7H,EAAMiB,MACb,IAAK,UACJ4G,EACC,kBAAC7C,EAAA,EAAD,CAAMC,GAAG,SACR,kBAACD,EAAA,EAAKI,KAAN,CAAWC,KAAK,QAAhB,mEAGF,MACD,IAAK,OACJwC,EACC,kBAAC7C,EAAA,EAAD,CAAMC,GAAG,QACR,kBAACD,EAAA,EAAKI,KAAN,CAAWC,KAAK,SAAhB,eAGF,MACD,IAAK,OAEAwC,EADoB,aAAxB7H,EAAMoD,cAEH,kBAAC4B,EAAA,EAAD,CAAMC,GAAG,WACR,kBAACD,EAAA,EAAKI,KAAN,CAAWC,KAAK,QAAhB,2BAAgDrF,EAAMoD,cAAtD,SAID,kBAAC4B,EAAA,EAAD,CAAMC,GAAG,WACR,kBAACD,EAAA,EAAKI,KAAN,CAAWC,KAAK,QAAhB,aAAkCrF,EAAMoD,cAAxC,MAGJ,MACD,IAAK,QACJyE,EACC,kBAAC7C,EAAA,EAAD,CAAMC,GAAG,WACR,kBAACD,EAAA,EAAKI,KAAN,CAAWC,KAAK,SAASrF,EAAMW,QAGjC,MAED,QACCkH,EACC,kBAAC7C,EAAA,EAAD,CAAMC,GAAG,SACR,kBAACD,EAAA,EAAKI,KAAN,CAAWC,KAAK,QAAhB,mEAIJ,OAAOwC,G,yBC5BOC,EAlBE,SAAC9H,GAAW,IACpBgC,EAAoChC,EAApCgC,cAAeU,EAAqB1C,EAArB0C,MAAOE,EAAc5C,EAAd4C,MAAOX,EAAOjC,EAAPiC,GASjC8F,EAAY,CACfC,UAAU,GAAD,OAAK,IAAMtF,EAAX,KACTuF,OAAO,GAAD,OAAK,IAAMvF,EAAX,OAGP,OAAO,yBAAK+B,UAAS,oBAAe7B,GAASsC,MAAO6C,EAAWpC,QAX3C,WACL,SAAV/C,GAA8B,QAAVA,GACvBZ,EAAc,QAASC,OC0FXiG,EA3FE,WAAO,IAAD,EAUlB3D,qBAAW9E,KARdgB,EAFqB,EAErBA,aACAL,EAHqB,EAGrBA,UACA4B,EAJqB,EAIrBA,cACAF,EALqB,EAKrBA,UACApB,EANqB,EAMrBA,YACAwB,EAPqB,EAOrBA,oBAPqB,IAQrB1B,YAAeuF,EARM,EAQNA,MAAOrD,EARD,EAQCA,MARD,IASrBrC,MAASC,EATY,EASZA,IAAKC,EATO,EASPA,MATO,EAYegE,qBAAWhF,KAAxCgE,EAZc,EAYdA,WAAYc,EAZE,EAYFA,aA0DpB,OA7BAoC,qBACC,WAYC,GAVkB,SAAdrG,KA7BY,WAIjB,IAAM+H,EAAG,YAAQ1H,EAAaiB,QAO9B,GANAhB,EAAY8D,OAAS,GACpB9D,EAAY0H,SAAQ,SAACjG,GACpBgG,EAAIE,OAAOF,EAAIG,QAAQnG,GAAS,MAI9B1B,EAAa+D,OAAS,EAA1B,CACC,IAAI+D,EAAgBC,IAAOL,GAG3BjG,EAAoBqG,GAGpBtE,YAAW,WACgC,UAAtCxD,EAAa8H,GAAe3F,OAA2D,SAAtCnC,EAAa8H,GAAe3F,OAChFZ,EAAc,MAAOuG,KAEpBxC,IAQF0C,GAGY,IAARnI,GAAuB,IAAVC,GAChB8D,EAAaT,KAAK8E,QAKhBhG,EAAO,CACV,IAAMiG,EAAYnG,KAAKC,IAAIC,EAAO,GAAK,GACnCpC,EAAMqI,GAAapI,EAAQoI,KAE9B7G,IAEAxB,EAAMqI,GAAapF,EAAW,WAAYK,KAAK8E,OAE/CnI,EAAQoI,GAAapF,EAAW,SAAUK,KAAK8E,WAKlD,CAAEtI,EAAWE,EAAKC,IAGfmC,EAEF,yBAAK+B,UAAU,QACbhE,EAAakC,KAAI,SAACE,EAASC,GAC3B,OACC,kBAAC,EAAD,CACCiC,IAAKjC,EACLb,GAAIa,EACJJ,MAAOA,EACPV,cAAeA,EACfY,MAAOC,EAAQD,YAOb,MCzEMgG,EAbG,WAAO,IAAD,EACMrE,qBAAWsE,KAAhCzI,EADe,EACfA,UAAWO,EADI,EACJA,MACXyC,EAAkBmB,qBAAWhF,KAA7B6D,cAER,OACC,yBAAKqB,UAAU,aACd,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASxD,KAAMb,EAAWgD,cAAeA,EAAezC,MAAOA,IAC/D,kBAAC,EAAD,Q,gBCMYmI,EAbH,WACX,OACC,kBAAC/I,EAAA,EAAD,KACC,kBAACgD,EAAA,EAAD,KACC,yBAAK0B,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,UCXLsE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.82622eb5.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;\r\n","import { createContext } from 'react';\r\n\r\nconst gameContext = createContext();\r\n\r\nexport default gameContext;\r\n","module.exports = global.config = {\r\n\tproxy: 'https://starnavi-frontend-test-task.herokuapp.com'\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.31985f2a.gif\";","import React, { useReducer } from 'react';\r\nimport GameContext from './GameContext';\r\nimport GameReducer from './GameReducer';\r\nimport Axios from 'axios';\r\n\r\nimport '../../config';\r\n\r\nconst GameState = (props) => {\r\n\tconst initialState = {\r\n\t\tgameSettings: null,\r\n\t\tgameState: 'default',\r\n\t\tcount: {\r\n\t\t\tred: 0,\r\n\t\t\tgreen: 0\r\n\t\t},\r\n\t\tcurrentGame: {},\r\n\t\tgameElements: [],\r\n\t\trandomArray: [],\r\n\t\terror: null\r\n\t};\r\n\r\n\tconst [ state, dispatch ] = useReducer(GameReducer, initialState);\r\n\tconst serverProxy = global.config.proxy;\r\n\r\n\t// GAME SETTING SELECT + UPDATE PLAY AREA\r\n\tconst changeGame = (params) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_GAME',\r\n\t\t\tpayload: params\r\n\t\t});\r\n\t};\r\n\r\n\t// PLAY BUTTON CLICKED or START GAME\r\n\tconst playButton = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'START_GAME'\r\n\t\t});\r\n\t};\r\n\r\n\t// UPDATE STATE ON GAME END\r\n\tconst gameEnded = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GAME_ENDED'\r\n\t\t});\r\n\t};\r\n\r\n\t// ADDING NEW RANDOM ELEMENT INTO ARRAY\r\n\tconst updateRandomElement = (random) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'UPDATE_RANDOM',\r\n\t\t\tpayload: random\r\n\t\t});\r\n\t};\r\n\r\n\t// COUNTING POINTS\r\n\tconst increaseCount = (type, id) => {\r\n\t\ttype === 'red' &&\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'UPDATE_RED',\r\n\t\t\t\tpayload: id\r\n\t\t\t});\r\n\t\ttype === 'green' &&\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'UPDATE_GREEN',\r\n\t\t\t\tpayload: id\r\n\t\t\t});\r\n\t};\r\n\r\n\t// FETCH GAME SETTINGS\r\n\tconst fetchGameSettings = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await Axios.get(`${serverProxy}/game-settings`);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'GET_SETTINGS',\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t\tchangeGame(res.data[Object.keys(res.data)[0]]);\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'NO_SETTINGS'\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// NAME VALIDATION\r\n\tconst setNameError = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'INVALID_NAME'\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GameContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tgameSettings: state.gameSettings,\r\n\t\t\t\tgameState: state.gameState,\r\n\t\t\t\tcurrentGame: state.currentGame,\r\n\t\t\t\tgameElements: state.gameElements,\r\n\t\t\t\tcount: state.count,\r\n\t\t\t\trandomArray: state.randomArray,\r\n\t\t\t\terror: state.error,\r\n\t\t\t\tfetchGameSettings,\r\n\t\t\t\tchangeGame,\r\n\t\t\t\tplayButton,\r\n\t\t\t\tgameEnded,\r\n\t\t\t\tsetNameError,\r\n\t\t\t\tincreaseCount,\r\n\t\t\t\tupdateRandomElement\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</GameContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default GameState;\r\n","export default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'GET_SETTINGS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgameSettings: action.payload\r\n\t\t\t};\r\n\r\n\t\tcase 'SET_GAME':\r\n\t\t\tconst playArea = [ ...Array(Math.pow(action.payload.field, 2)) ];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentGame: action.payload,\r\n\t\t\t\tgameElements: playArea.map(() => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcolor: ''\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t};\r\n\r\n\t\tcase 'START_GAME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgameState: 'game',\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\r\n\t\tcase 'UPDATE_RED': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcount: {\r\n\t\t\t\t\t...state.count,\r\n\t\t\t\t\tred: state.count.red + 1\r\n\t\t\t\t},\r\n\t\t\t\tgameElements: state.gameElements.map((element, index) => {\r\n\t\t\t\t\tindex === action.payload && (element.color = 'red');\r\n\t\t\t\t\treturn element;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'UPDATE_GREEN': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcount: {\r\n\t\t\t\t\t...state.count,\r\n\t\t\t\t\tgreen: state.count.green + 1\r\n\t\t\t\t},\r\n\t\t\t\tgameElements: state.gameElements.map((element, index) => {\r\n\t\t\t\t\tindex === action.payload && (element.color = 'green');\r\n\t\t\t\t\treturn element;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'UPDATE_RANDOM':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trandomArray: [ ...state.randomArray, action.payload ],\r\n\t\t\t\tgameElements: state.gameElements.map((element, index) => {\r\n\t\t\t\t\tindex === action.payload && (element.color = 'blue');\r\n\t\t\t\t\treturn element;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\r\n\t\tcase 'GAME_ENDED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgameState: 'over',\r\n\t\t\t\tcount: {\r\n\t\t\t\t\tred: 0,\r\n\t\t\t\t\tgreen: 0\r\n\t\t\t\t},\r\n\t\t\t\trandomArray: [],\r\n\t\t\t\tgameElements: state.gameElements.map((element) => {\r\n\t\t\t\t\telement.color = '';\r\n\t\t\t\t\treturn element;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\r\n\t\tcase 'ADD_COLOR_ELEMENT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgameElements: [\r\n\t\t\t\t\t...state.gameElements,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolor: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\r\n\t\tcase 'NO_SETTINGS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: 'No game settings, server error'\r\n\t\t\t};\r\n\r\n\t\tcase 'INVALID_NAME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgameState: 'error',\r\n\t\t\t\terror: 'Enter a name to start the game'\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport UserContext from './UserContext';\r\nimport UserReducer from './UserReducer';\r\nimport Axios from 'axios';\r\nimport '../../config';\r\n\r\nconst UserState = (props) => {\r\n\tconst initialState = {\r\n\t\tcurrentUser: {\r\n\t\t\tname: '',\r\n\t\t\tstartTime: null\r\n\t\t},\r\n\t\tcurrentWinner: '',\r\n\t\tallPlayers: [],\r\n\t\tserverMsg: null\r\n\t};\r\n\r\n\tconst [ state, dispatch ] = useReducer(UserReducer, initialState);\r\n\tconst serverProxy = global.config.proxy;\r\n\r\n\tconst postWinner = async (winner, endTime) => {\r\n\t\t// winner to send on the server\r\n\t\tlet newWinner = {\r\n\t\t\tdate: new Date().toLocaleString()\r\n\t\t};\r\n\t\tif (winner === 'player') {\r\n\t\t\tnewWinner.winner = state.currentUser.name;\r\n\t\t} else {\r\n\t\t\tnewWinner.winner = winner;\r\n\t\t}\r\n\t\t// user to update the UI\r\n\t\tconst newPlayer = {\r\n\t\t\tname: newWinner.winner,\r\n\t\t\ttime: (endTime - state.currentUser.startTime) / 1000,\r\n\t\t\tdate: newWinner.date\r\n\t\t};\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: 'WINNER_POSTED',\r\n\t\t\tpayload: newPlayer\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tawait Axios.post(`${serverProxy}/winners`, newWinner);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SERVER_UPDATED'\r\n\t\t\t});\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'CLEAR_MESSAGE'\r\n\t\t\t\t});\r\n\t\t\t}, 2000);\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SERVER_REJECTED'\r\n\t\t\t});\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'CLEAR_MESSAGE'\r\n\t\t\t\t});\r\n\t\t\t}, 2000);\r\n\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\tconst setUser = (user) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_CURRENT_PLAYER',\r\n\t\t\tpayload: user\r\n\t\t});\r\n\t};\r\n\r\n\tconst setStartTime = (time) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_START_TIME',\r\n\t\t\tpayload: time\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<UserContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcurrentUser: state.currentUser,\r\n\t\t\t\tallUsers: state.allUsers,\r\n\t\t\t\tallPlayers: state.allPlayers,\r\n\t\t\t\tcurrentWinner: state.currentWinner,\r\n\t\t\t\tserverMsg: state.serverMsg,\r\n\t\t\t\tsetUser,\r\n\t\t\t\tpostWinner,\r\n\t\t\t\tsetStartTime\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</UserContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default UserState;\r\n","export default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_CURRENT_PLAYER':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUser: {\r\n\t\t\t\t\t...state.currentUser,\r\n\t\t\t\t\tname: action.payload\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tcase 'SET_START_TIME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUser: {\r\n\t\t\t\t\t...state.currentUser,\r\n\t\t\t\t\tstartTime: action.payload\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tcase 'SET_END_TIME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUser: {\r\n\t\t\t\t\t...state.currentUser,\r\n\t\t\t\t\tendTime: action.payload\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tcase 'WINNER_POSTED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUser: {\r\n\t\t\t\t\tname: '',\r\n\t\t\t\t\tdate: null,\r\n\t\t\t\t\tstartTime: null\r\n\t\t\t\t},\r\n\t\t\t\tcurrentWinner: action.payload.name,\r\n\t\t\t\tallPlayers: [ ...state.allPlayers, action.payload ]\r\n\t\t\t};\r\n\r\n\t\tcase 'SERVER_UPDATED': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tserverMsg: 'SUCCESS - results posted to the server'\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase 'SERVER_REJECTED': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tserverMsg: 'ERROR - did not post results'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'CLEAR_MESSAGE': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tserverMsg: null\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, { useContext } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport UserContext from '../../context/user/UserContext';\r\n\r\nconst LeaderBoard = () => {\r\n\tconst { allPlayers, serverMsg } = useContext(UserContext);\r\n\r\n\tif (allPlayers.length < 1) {\r\n\t\treturn (\r\n\t\t\t<div className=\"LeaderBoard\">\r\n\t\t\t\t<h1>LEADER BOARD</h1>\r\n\t\t\t\t<h3>Get rocking with your 1st game</h3>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"LeaderBoard\">\r\n\t\t\t\t<h1>LEADER BOARD</h1>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t{allPlayers\r\n\t\t\t\t\t\t// sorting by time\r\n\t\t\t\t\t\t.sort((a, b) => {\r\n\t\t\t\t\t\t\treturn a.time - b.time;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t// creating JSX\r\n\t\t\t\t\t\t.map((player) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<ListGroup.Item key={player.date + player.time}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"userItem\">\r\n\t\t\t\t\t\t\t\t\t\t<p>{player.name}</p>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{player.time}sec</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{player.date}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t\t<Card bg=\"info\" style={serverMsg ? { opacity: '1' } : { opacity: '0' }}>\r\n\t\t\t\t\t<Card.Body text=\"light\">{serverMsg}</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default LeaderBoard;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst CustomButton = (props) => {\r\n\tlet ReturnButton = null;\r\n\tswitch (props.type) {\r\n\t\tcase 'default':\r\n\t\t\tReturnButton = (\r\n\t\t\t\t<Button variant=\"dark\" size=\"lg\" onClick={props.handleSubmit}>\r\n\t\t\t\t\tPLAY\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'over':\r\n\t\t\tReturnButton = (\r\n\t\t\t\t<Button variant=\"primary\" size=\"lg\" onClick={props.handleSubmit}>\r\n\t\t\t\t\tGO AGAIN!\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tReturnButton = (\r\n\t\t\t\t<Button variant=\"dark\" size=\"lg\" onClick={props.handleSubmit}>\r\n\t\t\t\t\tPLAY\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t}\r\n\treturn ReturnButton;\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\n\r\nconst Option = (props) => {\r\n\tconst { setting, field, delay } = props;\r\n\tlet option = (\r\n\t\t<option field={field} delay={delay}>\r\n\t\t\t{setting}: {field}x{field} play area size and {delay / 1000}s delay\r\n\t\t</option>\r\n\t);\r\n\treturn option;\r\n};\r\n\r\nexport default Option;\r\n","import React, { Fragment } from 'react';\r\nimport SpinnerGif from './assets/spinner.gif';\r\n\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<img src={SpinnerGif} alt=\"spinner\" className=\"Spinner\" />\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport CustomButton from './CustomButton';\r\nimport Option from './Option';\r\nimport Spinner from '../../../componenents/Spinner';\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport gameContext from '../../../context/game/GameContext';\r\nimport UserContext from '../../../context/user/UserContext';\r\n\r\nconst NavButtons = () => {\r\n\tconst [ params, setParams ] = useState({\r\n\t\tgameParams: null,\r\n\t\tname: ''\r\n\t});\r\n\r\n\tconst { gameParams, name } = params;\r\n\tconst { gameState, gameSettings, fetchGameSettings, setNameError, changeGame, playButton } = useContext(\r\n\t\tgameContext\r\n\t);\r\n\tconst { setUser } = useContext(UserContext);\r\n\r\n\t// FETCH GAME SETTINGS and SET SPINNER\r\n\tlet spinnerShow = true;\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (spinnerShow) {\r\n\t\t\t\tfetchGameSettings();\r\n\t\t\t}\r\n\r\n\t\t\tif (gameParams) {\r\n\t\t\t\tchangeGame(gameParams);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[ gameSettings, spinnerShow, gameParams ]\r\n\t);\r\n\r\n\t// turning off spinner\r\n\tgameSettings && (spinnerShow = false);\r\n\r\n\t// UPDATING GAME SETTINGS\r\n\tconst updateGame = (e) => {\r\n\t\tconst gameName = e.target.value.split(':')[0];\r\n\t\tsetParams({\r\n\t\t\t...params,\r\n\t\t\tgameParams: gameSettings[gameName]\r\n\t\t});\r\n\t};\r\n\r\n\t// UPDATING PLAYER NAME\r\n\tconst updateName = (e) => {\r\n\t\tsetParams({\r\n\t\t\t...params,\r\n\t\t\tname: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\t// START THE GAME\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (params.name.trim() === '') {\r\n\t\t\tsetNameError();\r\n\t\t} else {\r\n\t\t\tplayButton();\r\n\t\t\t// adding user to state\r\n\t\t\tsetUser(params.name);\r\n\t\t}\r\n\t};\r\n\r\n\t// RENDER\r\n\tif (spinnerShow) {\r\n\t\treturn (\r\n\t\t\t<div className=\"GameNav\">\r\n\t\t\t\t<Spinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<form className={gameState === 'game' ? 'GameNav Disabled' : 'GameNav'}>\r\n\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t<Form.Label>Pick the game</Form.Label>\r\n\t\t\t\t\t<Form.Control as=\"select\" size=\"lg\" name=\"gameParams\" onChange={updateGame}>\r\n\t\t\t\t\t\t{Object.keys(gameSettings).map((setting, index) => (\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\tkey={setting + index}\r\n\t\t\t\t\t\t\t\tsetting={setting}\r\n\t\t\t\t\t\t\t\tfield={gameSettings[setting].field}\r\n\t\t\t\t\t\t\t\tdelay={gameSettings[setting].delay}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<InputGroup size=\"lg\">\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\taria-label=\"Large\"\r\n\t\t\t\t\t\taria-describedby=\"inputGroup-sizing-sm\"\r\n\t\t\t\t\t\tplaceholder=\"Enter your name\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={updateName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t\t<CustomButton type={gameState} handleSubmit={handleSubmit} />\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default NavButtons;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Message = (props) => {\r\n\tlet ReturnMSG = null;\r\n\tswitch (props.type) {\r\n\t\tcase 'default':\r\n\t\t\tReturnMSG = (\r\n\t\t\t\t<Card bg=\"light\">\r\n\t\t\t\t\t<Card.Body text=\"dark\">Select game mode and enter your name and click \"PLAY\" to start</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'game':\r\n\t\t\tReturnMSG = (\r\n\t\t\t\t<Card bg=\"info\">\r\n\t\t\t\t\t<Card.Body text=\"light\">Good luck!</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'over':\r\n\t\t\tprops.currentWinner === 'computer'\r\n\t\t\t\t? (ReturnMSG = (\r\n\t\t\t\t\t\t<Card bg=\"warning\">\r\n\t\t\t\t\t\t\t<Card.Body text=\"dark\">Better luck next time...{props.currentWinner} won</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t))\r\n\t\t\t\t: (ReturnMSG = (\r\n\t\t\t\t\t\t<Card bg=\"success\">\r\n\t\t\t\t\t\t\t<Card.Body text=\"dark\">Well done {props.currentWinner}!</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t));\r\n\t\t\tbreak;\r\n\t\tcase 'error':\r\n\t\t\tReturnMSG = (\r\n\t\t\t\t<Card bg=\"warning\">\r\n\t\t\t\t\t<Card.Body text=\"light\">{props.error}</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tReturnMSG = (\r\n\t\t\t\t<Card bg=\"light\">\r\n\t\t\t\t\t<Card.Body text=\"dark\">Select game mode and enter your name and click \"PLAY\" to start</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t);\r\n\t}\r\n\treturn ReturnMSG;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst GameItem = (props) => {\r\n\tconst { increaseCount, field, color, id } = props;\r\n\r\n\t// HANDLE CLICK or ADD GREEN COLOR\r\n\tconst handleClick = () => {\r\n\t\tif (color === 'blue' && color !== 'red') {\r\n\t\t\tincreaseCount('green', id);\r\n\t\t}\r\n\t};\r\n\r\n\tlet itemStyle = {\r\n\t\tflexBasis: `${100 / field}%`,\r\n\t\theight: `${350 / field}px`\r\n\t};\r\n\r\n\treturn <div className={`game-item ${color}`} style={itemStyle} onClick={handleClick} />;\r\n};\r\n\r\nexport default GameItem;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport Random from 'random-item';\r\nimport GameItem from './GameItem';\r\n\r\nimport gameContext from '../../../context/game/GameContext';\r\nimport UserContext from '../../../context/user/UserContext';\r\n\r\nconst PlayArea = () => {\r\n\tconst {\r\n\t\tgameElements,\r\n\t\tgameState,\r\n\t\tincreaseCount,\r\n\t\tgameEnded,\r\n\t\trandomArray,\r\n\t\tupdateRandomElement,\r\n\t\tcurrentGame: { delay, field },\r\n\t\tcount: { red, green }\r\n\t} = useContext(gameContext);\r\n\r\n\tconst { postWinner, setStartTime } = useContext(UserContext);\r\n\r\n\t// MAIN GAME FUNCTION\r\n\tconst startGame = () => {\r\n\t\t// ADDING BLUE ITEM\r\n\r\n\t\t// removing previous numbers from the game field\r\n\t\tconst arr = [ ...gameElements.keys() ];\r\n\t\trandomArray.length > 0 &&\r\n\t\t\trandomArray.forEach((random) => {\r\n\t\t\t\tarr.splice(arr.indexOf(random), 1);\r\n\t\t\t});\r\n\r\n\t\t// creating random number from filtered array\r\n\t\tif (gameElements.length > 0) {\r\n\t\t\tlet randomElement = Random(arr);\r\n\r\n\t\t\t// setting blue color and updating array for next iteration\r\n\t\t\tupdateRandomElement(randomElement);\r\n\r\n\t\t\t// HANDLING TIMEOUT or ADDING RED COLOR\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (gameElements[randomElement].color !== 'green' && gameElements[randomElement].color === 'blue') {\r\n\t\t\t\t\tincreaseCount('red', randomElement);\r\n\t\t\t\t}\r\n\t\t\t}, delay);\r\n\t\t} else return;\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t// START THE GAME\r\n\t\t\tif (gameState === 'game') {\r\n\t\t\t\tstartGame();\r\n\r\n\t\t\t\t// saving start time\r\n\t\t\t\tif (red === 0 && green === 0) {\r\n\t\t\t\t\tsetStartTime(Date.now());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// CONDITION TO FINISH THE GAME\r\n\t\t\tif (field) {\r\n\t\t\t\tconst condition = Math.pow(field, 2) / 2;\r\n\t\t\t\tif (red > condition || green > condition) {\r\n\t\t\t\t\t// updating DOM\r\n\t\t\t\t\tgameEnded();\r\n\t\t\t\t\t// submit computer as a winner to the server\r\n\t\t\t\t\tred > condition && postWinner('computer', Date.now());\r\n\t\t\t\t\t// submit player as a winner to the server\r\n\t\t\t\t\tgreen > condition && postWinner('player', Date.now());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line\r\n\t\t[ gameState, red, green ]\r\n\t);\r\n\r\n\tif (field) {\r\n\t\treturn (\r\n\t\t\t<div className=\"Game\">\r\n\t\t\t\t{gameElements.map((element, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<GameItem\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\tfield={field}\r\n\t\t\t\t\t\t\tincreaseCount={increaseCount}\r\n\t\t\t\t\t\t\tcolor={element.color}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport default PlayArea;\r\n","import React, { useContext } from 'react';\r\nimport NavButtons from './navButtons/NavButtons';\r\nimport Message from '../message/Message';\r\nimport PlayArea from './playArea/PlayArea';\r\n\r\nimport GameContext from '../../context/game/GameContext';\r\nimport UserContext from '../../context/user/UserContext';\r\n\r\nconst GameBoard = () => {\r\n\tconst { gameState, error } = useContext(GameContext);\r\n\tconst { currentWinner } = useContext(UserContext);\r\n\r\n\treturn (\r\n\t\t<div className=\"GameBoard\">\r\n\t\t\t<NavButtons />\r\n\t\t\t<Message type={gameState} currentWinner={currentWinner} error={error} />\r\n\t\t\t<PlayArea />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GameBoard;\r\n","import React from 'react';\nimport './styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport LeaderBoard from './layout/leaderboard/LeaderBoard';\nimport GameBoard from './layout/game/GameBoard';\nimport GameState from './context/game/GameState';\nimport UserState from './context/user/UserState';\n\nconst App = () => {\n\treturn (\n\t\t<GameState>\n\t\t\t<UserState>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<GameBoard />\n\t\t\t\t\t<LeaderBoard />\n\t\t\t\t</div>\n\t\t\t</UserState>\n\t\t</GameState>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}